name: CI - Test, Coverage, Cross-Compile

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  GO_VERSION: '1.23.0'

permissions:
  contents: write

jobs:
  test:
    name: Run Tests & Upload Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Tests with Coverage
        run: go test ./... -race -covermode=atomic -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  cross-compile:
    name: Cross Compile Binaries
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            ext: ''
            archive: tar.gz

          - goos: darwin
            goarch: amd64
            ext: ''
            archive: tar.gz

          - goos: windows
            goarch: amd64
            ext: .exe
            archive: zip

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set Build Variables
        id: vars
        run: |
          NAME=techdetector-${{ matrix.goos }}-${{ matrix.goarch }}
          echo "BIN_NAME=$NAME" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=$NAME.${{ matrix.archive }}" >> $GITHUB_ENV

      - name: Determine Version
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "VERSION=dev" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Build Binary
        run: |
          OUTPUT=$BIN_NAME${{ matrix.ext }}

          if [[ "${{ matrix.goos }}" == "linux" ]]; then
            CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
              go build -a -ldflags '-linkmode external -extldflags "-static" -X "main.Version=${VERSION}"' \
              -o $OUTPUT
          else
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
              go build -ldflags "-X 'main.Version=${VERSION}'" \
              -o $OUTPUT
          fi

      - name: Compress Binary
        run: |
          mkdir -p archive
          if [[ "${{ matrix.archive }}" == "zip" ]]; then
            zip archive/$ARCHIVE_NAME $BIN_NAME${{ matrix.ext }}
          else
            tar -czvf archive/$ARCHIVE_NAME $BIN_NAME${{ matrix.ext }}
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: archive/${{ env.ARCHIVE_NAME }}
